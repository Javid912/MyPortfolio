---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/MyPortfolio/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=gg+sans:wght@400;500;600;700;800&display=swap" rel="stylesheet">
		<title>{title}</title>
	</head>
	<body class="min-h-screen relative">
		<div class="animated-bg absolute inset-0 w-full min-h-screen">
			<div class="background-animation">
				<div class="floating-elements"></div>
				<div class="floating-icons">
					{Array(20).fill('').map((_, i) => (
						<div 
							class="floating-icon"
							style={`--delay: ${i * -2}s; --x: ${Math.random() * 100}vw; --y: ${Math.random() * 100}vh;`}
						>
							{['‚ö°', 'ü§ñ', 'üöÄ', 'üíª', 'üîÆ', '‚öôÔ∏è', 'üéØ', 'üåü'][Math.floor(Math.random() * 8)]}
						</div>
					))}
				</div>
			</div>
		</div>
		<div class="relative z-10">
			<slot />
		</div>
	</body>
</html>

<style is:global>
	:root {
		--discord-blurple: #5865F2;
		--discord-green: #57F287;
		--discord-yellow: #FEE75C;
		--discord-fuchsia: #EB459E;
		--discord-red: #ED4245;
		--discord-white: #FFFFFF;
		--discord-dark: #36393F;
		--discord-darker: #2F3136;
		--discord-darkest: #202225;
		--discord-text: #B9BBBE;
		--discord-link: #00AFF4;
		--discord-focus: #00B0F4;
		--discord-hover: #4752C4;
	}

	html {
		font-family: 'gg sans', system-ui, sans-serif;
		background: var(--discord-darker);
		color: #ffffff;
		scroll-behavior: smooth;
	}

	body {
		margin: 0;
		padding: 0;
		min-height: 100vh;
		overflow-x: hidden;
	}

	.animated-bg {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 0;
		overflow: hidden;
	}

	.background-animation {
		position: absolute;
		inset: 0;
		background: linear-gradient(135deg, #1a1b26 0%, #2f3875 100%);
		overflow: hidden;
	}

	.floating-elements {
		position: absolute;
		inset: 0;
		pointer-events: none;
	}

	.floating-elements::before,
	.floating-elements::after {
		content: '';
		position: absolute;
		width: 500px;
		height: 500px;
		border-radius: 50%;
		background: radial-gradient(circle, rgba(88, 101, 242, 0.1) 0%, transparent 70%);
		animation: float 20s infinite;
	}

	.floating-elements::before {
		top: -250px;
		left: -250px;
		animation-delay: -5s;
	}

	.floating-elements::after {
		bottom: -250px;
		right: -250px;
		animation-delay: -10s;
	}

	.floating-icons {
		position: fixed;
		inset: 0;
		pointer-events: none;
	}

	.floating-icon {
		position: absolute;
		font-size: 1.5rem;
		opacity: 0.1;
		animation: float-icon 15s linear infinite;
		top: var(--y);
		left: var(--x);
		animation-delay: var(--delay);
	}

	@keyframes float {
		0%, 100% {
			transform: translate(0, 0) rotate(0deg);
		}
		25% {
			transform: translate(100px, 50px) rotate(45deg);
		}
		50% {
			transform: translate(50px, 100px) rotate(90deg);
		}
		75% {
			transform: translate(-50px, 50px) rotate(45deg);
		}
	}

	@keyframes float-icon {
		0% {
			transform: translateY(100vh) rotate(0deg);
			opacity: 0;
		}
		10% {
			opacity: 0.1;
		}
		90% {
			opacity: 0.1;
		}
		100% {
			transform: translateY(-100px) rotate(360deg);
			opacity: 0;
		}
	}

	.background-animation::after {
		content: '';
		position: absolute;
		inset: 0;
		background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 256 256' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%' height='100%' filter='url(%23noise)' opacity='0.05'/%3E%3C/svg%3E");
		opacity: 0.15;
		mix-blend-mode: overlay;
	}


	section {
		position: relative;
		background: rgba(15, 16, 22, 0.5);
		backdrop-filter: blur(10px);
		border-top: 1px solid rgba(88, 101, 242, 0.1);
		border-bottom: 1px solid rgba(88, 101, 242, 0.1);
	}

	section:nth-child(even) {
		background: rgba(26, 27, 38, 0.5);
	}
</style>
