---
interface Props {
  title: string;
  description: string;
  icon: string;
  features: string[];
}

const { title, description, icon, features } = Astro.props;

// Map of service icons and their colors
const iconConfig = {
  "🤖": "from-[#FF4B4B] to-[#F70776]",
  "🔄": "from-[#00A67E] to-[#006B4C]",
  "💻": "from-[#4285F4] to-[#0F52BA]",
  "📊": "from-[#FFD21E] to-[#FF6B6B]",
  "🎯": "from-[#7B42BC] to-[#412991]",
  "🌐": "from-[#2496ED] to-[#017CEE]",
};

const gradientClass = iconConfig[icon] || "from-discord-blurple to-[#412991]";
---

<div class="group relative bg-discord-dark rounded-xl p-8 hover:bg-discord-dark/80 transition-all duration-300">
  <!-- Icon -->
  <div class={`absolute -top-6 left-6 w-12 h-12 rounded-2xl bg-gradient-to-br ${gradientClass} flex items-center justify-center text-2xl transform group-hover:scale-110 group-hover:rotate-3 transition-all duration-300`}>
    {icon}
  </div>

  <!-- Content -->
  <div class="mt-8">
    <h3 class="text-2xl font-bold text-white mb-4 group-hover:text-discord-blurple transition-colors">
      {title}
    </h3>
    <p class="text-discord-text mb-6 text-lg">
      {description}
    </p>

    <!-- Features List -->
    <ul class="space-y-3">
      {features.map((feature) => (
        <li class="flex items-center gap-3 text-discord-text group-hover:text-white transition-colors">
          <span class="text-discord-blurple">⚡</span>
          {feature}
        </li>
      ))}
    </ul>

    <!-- CTA Button -->
    <a
      href="#contact"
      class="inline-flex items-center gap-2 mt-8 px-6 py-3 bg-discord-blurple/10 text-discord-blurple rounded-xl font-medium hover:bg-discord-blurple hover:text-white transition-all duration-300"
    >
      Get Started
      <span class="text-xl">→</span>
    </a>
  </div>

  <!-- Border Effect -->
  <div class="absolute inset-0 border-2 border-transparent rounded-xl transition-all duration-300 group-hover:border-discord-blurple/50"></div>
</div>